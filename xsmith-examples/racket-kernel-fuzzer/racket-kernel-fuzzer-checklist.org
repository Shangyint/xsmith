* racket/src/cs/primitive/kernel.ss
** DONE [* (known-procedure/folding -1)]
** DONE [+ (known-procedure/folding -1)]
** DONE [- (known-procedure/folding -2)]
** DONE [/ (known-procedure/folding -2)]
** DONE [< (known-procedure/folding -2)]
** DONE [<= (known-procedure/folding -2)]
** DONE [= (known-procedure/folding -2)]
** DONE [> (known-procedure/folding -2)]
** DONE [>= (known-procedure/folding -2)]
** TODO [abort-current-continuation (known-procedure -2)]
** DONE [abs (known-procedure/folding 2)]
** TODO [absolute-path? (known-procedure/no-prompt 2)]
** DONE [acos (known-procedure/folding 2)]
** DONE [add1 (known-procedure/folding 2)]
** TODO [alarm-evt (known-procedure/no-prompt 2)]
** TODO [always-evt (known-authentic)]
** TODO [andmap (known-procedure -4)]
** DONE [angle (known-procedure/folding 2)]
** DONE [append (known-procedure/no-prompt -1)]
** TODO [apply (known-procedure -4)]
** TODO [arithmetic-shift (known-procedure/folding/limited 4 'expt)]
** TODO [arity-at-least (known-constant)]
** TODO [arity-at-least-value (known-procedure 2)]
** TODO [arity-at-least? (known-procedure/pure/folding 2)]
** DONE [asin (known-procedure/folding 2)]
** TODO [assoc (known-procedure 4)]
** TODO [assq (known-procedure/no-prompt 4)]
** TODO [assv (known-procedure/no-prompt 4)]
** SEMI [atan (known-procedure/folding 6)]
*** TODO - two argument case (needs safe wrapper)
** DONT-DO [banner (known-procedure/pure 1)]
*** it returns a different string in each version, on purpose.
** DONE [bitwise-and (known-procedure/folding -1)]
** TODO [bitwise-bit-field (known-procedure/folding 8)]
** TODO [bitwise-bit-set? (known-procedure/folding 4)]
** DONE [bitwise-ior (known-procedure/folding -1)]
** DONE [bitwise-not (known-procedure/folding 2)]
** DONE [bitwise-xor (known-procedure/folding -1)]
** DONE [boolean? (known-procedure/pure/folding 2)]
** DONE [box (known-procedure/pure 2)]
** TODO [box-cas! (known-procedure/has-unsafe 8 'unsafe-box*-cas!)]
** DONE [box-immutable (known-procedure/pure 2)]
** DONE [box? (known-procedure/pure/folding 2)]
** TODO [break-enabled (known-procedure/no-prompt 3)]
** TODO [break-thread (known-procedure/no-prompt 6)]
** TODO [build-path (known-procedure/no-prompt -2)]
** TODO [build-path/convention-type (known-procedure/no-prompt -4)]
** TODO [byte-pregexp (known-procedure/no-prompt 6)]
** TODO [byte-pregexp? (known-procedure/pure/folding 2)]
** TODO [byte-ready? (known-procedure 3)]
** TODO [byte-regexp (known-procedure/no-prompt 6)]
** TODO [byte-regexp? (known-procedure/pure/folding 2)]
** DONE [byte? (known-procedure/pure/folding 2)]
** TODO [bytes (known-procedure/no-prompt -1)]
** TODO [bytes->immutable-bytes (known-procedure/no-prompt 2)]
** TODO [bytes->list (known-procedure/no-prompt 2)]
** TODO [bytes->path (known-procedure/no-prompt 6)]
** TODO [bytes->path-element (known-procedure/no-prompt 6)]
** TODO [bytes->string/latin-1 (known-procedure/no-prompt 30)]
** TODO [bytes->string/locale (known-procedure/no-prompt 30)]
** TODO [bytes->string/utf-8 (known-procedure/no-prompt 30)]
** TODO [bytes-append (known-procedure/no-prompt -1)]
** TODO [bytes-close-converter (known-procedure/no-prompt 2)]
** TODO [bytes-convert (known-procedure/no-prompt 254)]
** TODO [bytes-convert-end (known-procedure/no-prompt 15)]
** TODO [bytes-converter? (known-procedure/pure/folding 2)]
** TODO [bytes-copy (known-procedure/no-prompt 2)]
** TODO [bytes-copy! (known-procedure/no-prompt 56)]
** TODO [bytes-fill! (known-procedure/no-prompt 4)]
** TODO [bytes-length (known-procedure/has-unsafe 2 'unsafe-bytes-length)]
** TODO [bytes-open-converter (known-procedure/no-prompt 4)]
** TODO [bytes-ref (known-procedure/has-unsafe 4 'unsafe-bytes-ref)]
** TODO [bytes-set! (known-procedure/has-unsafe 8 'unsafe-bytes-set!)]
** TODO [bytes-utf-8-index (known-procedure/no-prompt 28)]
** TODO [bytes-utf-8-length (known-procedure/no-prompt 30)]
** TODO [bytes-utf-8-ref (known-procedure/no-prompt 28)]
** TODO [bytes<? (known-procedure/no-prompt -2)]
** TODO [bytes=? (known-procedure/no-prompt -2)]
** TODO [bytes>? (known-procedure/no-prompt -2)]
** DONE [bytes? (known-procedure/pure/folding 2)]
** TODO [caaaar (known-procedure/no-prompt 2)]
** TODO [caaadr (known-procedure/no-prompt 2)]
** TODO [caaar (known-procedure/no-prompt 2)]
** TODO [caadar (known-procedure/no-prompt 2)]
** TODO [caaddr (known-procedure/no-prompt 2)]
** TODO [caadr (known-procedure/no-prompt 2)]
** TODO [caar (known-procedure/no-prompt 2)]
** TODO [cadaar (known-procedure/no-prompt 2)]
** TODO [cadadr (known-procedure/no-prompt 2)]
** TODO [cadar (known-procedure/no-prompt 2)]
** TODO [caddar (known-procedure/no-prompt 2)]
** TODO [cadddr (known-procedure/no-prompt 2)]
** TODO [caddr (known-procedure/no-prompt 2)]
** TODO [cadr (known-procedure/no-prompt 2)]
** TODO [call-in-nested-thread (known-procedure 6)]
** TODO [call-with-composable-continuation (known-procedure 6)]
** TODO [call-with-continuation-barrier (known-procedure 2)]
** TODO [call-with-continuation-prompt (known-procedure -2)]
** TODO [call-with-current-continuation (known-procedure 6)]
** TODO [call-with-escape-continuation (known-procedure 2)]
** TODO [call-with-immediate-continuation-mark (known-procedure 12)]
** TODO [call-with-input-file (known-procedure/no-prompt 12)]
** TODO [call-with-output-file (known-procedure/no-prompt 28)]
** TODO [call-with-semaphore (known-procedure -4)]
** TODO [call-with-semaphore/enable-break (known-procedure -4)]
** TODO [call-with-values (known-procedure 4)]
** DONE [car (known-procedure/no-prompt 2)]
** TODO [cdaaar (known-procedure/no-prompt 2)]
** TODO [cdaadr (known-procedure/no-prompt 2)]
** TODO [cdaar (known-procedure/no-prompt 2)]
** TODO [cdadar (known-procedure/no-prompt 2)]
** TODO [cdaddr (known-procedure/no-prompt 2)]
** TODO [cdadr (known-procedure/no-prompt 2)]
** TODO [cdar (known-procedure/no-prompt 2)]
** TODO [cddaar (known-procedure/no-prompt 2)]
** TODO [cddadr (known-procedure/no-prompt 2)]
** TODO [cddar (known-procedure/no-prompt 2)]
** TODO [cdddar (known-procedure/no-prompt 2)]
** TODO [cddddr (known-procedure/no-prompt 2)]
** TODO [cdddr (known-procedure/no-prompt 2)]
** TODO [cddr (known-procedure/no-prompt 2)]
** DONE [cdr (known-procedure/no-prompt 2)]
** DONE [ceiling (known-procedure/folding 2)]
** TODO [channel-put-evt (known-procedure/no-prompt 4)]
** TODO [channel-put-evt? (known-procedure/pure/folding 2)]
** TODO [channel? (known-procedure/pure/folding 2)]
** TODO [chaperone-box (known-procedure -8)]
** TODO [chaperone-channel (known-procedure -8)]
** TODO [chaperone-continuation-mark-key (known-procedure -8)]
** TODO [chaperone-evt (known-procedure -4)]
** TODO [chaperone-hash (known-procedure -32)]
** TODO [chaperone-of? (known-procedure 4)]
** TODO [chaperone-procedure (known-procedure/no-prompt -4)]
** TODO [chaperone-procedure* (known-procedure/no-prompt -4)]
** TODO [chaperone-prompt-tag (known-procedure -8)]
** TODO [chaperone-struct (known-procedure -2)]
** TODO [chaperone-struct-type (known-procedure -16)]
** TODO [chaperone-vector (known-procedure -8)]
** TODO [chaperone-vector* (known-procedure -8)]
** TODO [chaperone? (known-procedure/pure/folding 2)]
** DONE [char->integer (known-procedure/folding 2)]
** DONE [char-alphabetic? (known-procedure/folding 2)]
** DONE [char-blank? (known-procedure/folding 2)]
** DONE [char-ci<=? (known-procedure/folding -2)]
** DONE [char-ci<? (known-procedure/folding -2)]
** DONE [char-ci=? (known-procedure/folding -2)]
** DONE [char-ci>=? (known-procedure/folding -2)]
** DONE [char-ci>? (known-procedure/folding -2)]
** DONE [char-downcase (known-procedure/folding 2)]
** DONE [char-foldcase (known-procedure/folding 2)]
** TODO [char-general-category (known-procedure/folding 2)]
** DONE [char-graphic? (known-procedure/folding 2)]
** DONE [char-iso-control? (known-procedure/folding 2)]
** DONE [char-lower-case? (known-procedure/folding 2)]
** DONE [char-numeric? (known-procedure/folding 2)]
** DONE [char-punctuation? (known-procedure/folding 2)]
** TODO [char-ready? (known-procedure/folding 3)]
** DONE [char-symbolic? (known-procedure/folding 2)]
** DONE [char-title-case? (known-procedure/folding 2)]
** DONE [char-titlecase (known-procedure/folding 2)]
** DONE [char-upcase (known-procedure/folding 2)]
** DONE [char-upper-case? (known-procedure/folding 2)]
** DONE [char-utf-8-length (known-procedure/folding 2)]
** DONE [char-whitespace? (known-procedure/folding 2)]
** DONE [char<=? (known-procedure/folding -2)]
** DONE [char<? (known-procedure/folding -2)]
** DONE [char=? (known-procedure/folding -2)]
** DONE [char>=? (known-procedure/folding -2)]
** DONE [char>? (known-procedure/folding -2)]
** DONE [char? (known-procedure/pure/folding 2)]
** TODO [checked-procedure-check-and-extract (known-procedure 32)]
** TODO [choice-evt (known-procedure/no-prompt -1)]
** TODO [cleanse-path (known-procedure/no-prompt 2)]
** TODO [close-input-port (known-procedure/no-prompt 2)]
** TODO [close-output-port (known-procedure/no-prompt 2)]
** TODO [collect-garbage (known-procedure/no-prompt 3)]
** TODO [compile-allow-set!-undefined (known-constant)]
** TODO [compile-context-preservation-enabled (known-constant)]
** TODO [compile-enforce-module-constants (known-constant)]
** TODO [compile-target-machine? (known-procedure/no-prompt 2)]
** TODO [complete-path? (known-procedure/no-prompt 2)]
** DONE [complex? (known-procedure/pure/folding 2)]
** DONE [cons (known-procedure/pure 4)]
** TODO [continuation-mark-key? (known-procedure/pure/folding 2)]
** TODO [continuation-mark-set->context (known-procedure/no-prompt 2)]
** TODO [continuation-mark-set->list (known-procedure/no-prompt 12)]
** TODO [continuation-mark-set->list* (known-procedure/no-prompt 28)]
** TODO [continuation-mark-set-first (known-procedure/no-prompt 28)]
** TODO [continuation-mark-set? (known-procedure/pure/folding 2)]
** TODO [continuation-marks (known-procedure 6)]
** TODO [continuation-prompt-available? (known-procedure 6)]
** TODO [continuation-prompt-tag? (known-procedure/pure/folding 2)]
** TODO [continuation? (known-procedure/pure/folding 2)]
** TODO [copy-file (known-procedure/no-prompt 12)]
** DONE [cos (known-procedure/folding 2)]
** TODO [current-code-inspector (known-procedure 3)]
** TODO [current-command-line-arguments (known-procedure 3)]
** TODO [current-compile-target-machine (known-procedure 3)]
** TODO [current-continuation-marks (known-procedure 3)]
** TODO [current-custodian (known-procedure 3)]
** TODO [current-directory (known-procedure 3)]
** TODO [current-directory-for-user (known-procedure 3)]
** TODO [current-drive (known-procedure/no-prompt 1)]
** TODO [current-environment-variables (known-procedure 3)]
** TODO [current-error-port (known-procedure 3)]
** TODO [current-evt-pseudo-random-generator (known-procedure 3)]
** TODO [current-force-delete-permissions (known-procedure 3)]
** TODO [current-gc-milliseconds (known-procedure/no-prompt 1)]
** TODO [current-get-interaction-input-port (known-procedure 3)]
** TODO [current-inexact-milliseconds (known-procedure/no-prompt 1)]
** TODO [current-input-port (known-procedure 3)]
** TODO [current-inspector (known-procedure 3)]
** TODO [current-load-extension (known-procedure 3)]
** TODO [current-load-relative-directory (known-procedure 3)]
** TODO [current-locale (known-procedure 3)]
** TODO [current-logger (known-procedure 3)]
** TODO [current-memory-use (known-procedure/no-prompt 3)]
** TODO [current-milliseconds (known-procedure/no-prompt 1)]
** TODO [current-output-port (known-procedure 3)]
** TODO [current-plumber (known-procedure 3)]
** TODO [current-preserved-thread-cell-values (known-procedure/no-prompt 3)]
** TODO [current-print (known-procedure 3)]
** TODO [current-process-milliseconds (known-procedure/no-prompt 3)]
** TODO [current-prompt-read (known-procedure 3)]
** TODO [current-pseudo-random-generator (known-procedure 3)]
** TODO [current-read-interaction (known-procedure 3)]
** TODO [current-seconds (known-procedure/no-prompt 1)]
** TODO [current-security-guard (known-procedure 3)]
** TODO [current-subprocess-custodian-mode (known-procedure 3)]
** TODO [current-thread (known-procedure/no-prompt 1)]
** TODO [current-thread-group (known-procedure 3)]
** TODO [current-thread-initial-stack-size (known-procedure 3)]
** TODO [current-write-relative-directory (known-procedure 3)]
** TODO [custodian-box-value (known-procedure/no-prompt 2)]
** TODO [custodian-box? (known-procedure/pure/folding 2)]
** TODO [custodian-limit-memory (known-procedure/no-prompt 12)]
** TODO [custodian-managed-list (known-procedure/no-prompt 4)]
** TODO [custodian-memory-accounting-available? (known-procedure/no-prompt 1)]
** TODO [custodian-require-memory (known-procedure/no-prompt 8)]
** TODO [custodian-shut-down? (known-procedure/no-prompt 2)]
** TODO [custodian-shutdown-all (known-procedure 2)]
** TODO [custodian? (known-procedure/pure/folding 2)]
** TODO [custom-print-quotable-accessor (known-procedure/no-prompt 2)]
** TODO [custom-print-quotable? (known-procedure/no-prompt 2)]
** TODO [custom-write-accessor (known-procedure/no-prompt 2)]
** TODO [custom-write? (known-procedure/pure/folding 2)]
** TODO [date (known-constant)]
** TODO [date* (known-constant)]
** TODO [date*-nanosecond (known-procedure 2)]
** TODO [date*-time-zone-name (known-procedure 2)]
** TODO [date*? (known-procedure/pure/folding 2)]
** TODO [date-day (known-procedure 2)]
** TODO [date-dst? (known-procedure 2)]
** TODO [date-hour (known-procedure 2)]
** TODO [date-minute (known-procedure 2)]
** TODO [date-month (known-procedure 2)]
** TODO [date-second (known-procedure 2)]
** TODO [date-time-zone-offset (known-procedure 2)]
** TODO [date-week-day (known-procedure 2)]
** TODO [date-year (known-procedure 2)]
** TODO [date-year-day (known-procedure 2)]
** TODO [date? (known-procedure/pure/folding 2)]
** TODO [datum->syntax (known-procedure/no-prompt 60)]
** TODO [datum-intern-literal (known-procedure/no-prompt 2)]
** TODO [default-continuation-prompt-tag (known-procedure/pure 1)]
** TODO [delete-directory (known-procedure/no-prompt 2)]
** TODO [delete-file (known-procedure/no-prompt 2)]
** TODO [denominator (known-procedure/folding 2)]
** TODO [directory-exists? (known-procedure/no-prompt 2)]
** TODO [directory-list (known-procedure/no-prompt 3)]
** TODO [display (known-procedure 6)]
** TODO [dump-memory-stats (known-procedure -1)]
** TODO [dynamic-wind (known-procedure 8)]
** TODO [environment-variables-copy (known-procedure/no-prompt 2)]
** TODO [environment-variables-names (known-procedure/no-prompt 2)]
** TODO [environment-variables-ref (known-procedure/no-prompt 4)]
** TODO [environment-variables-set! (known-procedure/no-prompt 24)]
** TODO [environment-variables? (known-procedure/pure/folding 2)]
** TODO [eof (known-literal eof)]
** TODO [eof-object? (known-procedure/pure/folding 2)]
** TODO [ephemeron-value (known-procedure/no-prompt 6)]
** TODO [ephemeron? (known-procedure/pure/folding 2)]
** TODO [eprintf (known-procedure -2)]
** TODO [eq-hash-code (known-procedure/no-prompt 2)]
** TODO [eq? (known-procedure/pure/folding 4)]
** TODO [equal-hash-code (known-procedure 2)]
** TODO [equal-secondary-hash-code (known-procedure 2)]
** TODO [equal? (known-procedure 4)]
** TODO [equal?/recur (known-procedure 8)]
** TODO [eqv-hash-code (known-procedure/no-prompt 2)]
** TODO [eqv? (known-procedure/pure/folding 4)]
** TODO [error (known-procedure -2)]
** TODO [error-display-handler (known-procedure 3)]
** TODO [error-escape-handler (known-procedure 3)]
** TODO [error-print-context-length (known-procedure 3)]
** TODO [error-print-source-location (known-procedure 3)]
** TODO [error-print-width (known-procedure 3)]
** TODO [error-value->string-handler (known-procedure 3)]
** TODO [eval-jit-enabled (known-procedure 3)]
** TODO [even? (known-procedure/folding 2)]
** TODO [evt? (known-procedure/pure/folding 2)]
** TODO [exact->inexact (known-procedure/folding 2)]
** TODO [exact-integer? (known-procedure/pure/folding 2)]
** TODO [exact-nonnegative-integer? (known-procedure/pure/folding 2)]
** TODO [exact-positive-integer? (known-procedure/pure/folding 2)]
** TODO [exact? (known-procedure/folding 2)]
** TODO [executable-yield-handler (known-procedure 3)]
** TODO [exit (known-procedure 3)]
** TODO [exit-handler (known-procedure 3)]
** TODO [exn (known-constant)]
** TODO [exn-continuation-marks (known-procedure 2)]
** TODO [exn-message (known-procedure 2)]
** TODO [exn:break (known-constant)]
** TODO [exn:break-continuation (known-procedure 2)]
** TODO [exn:break:hang-up (known-constant)]
** TODO [exn:break:hang-up? (known-procedure/pure/folding 2)]
** TODO [exn:break:terminate (known-constant)]
** TODO [exn:break:terminate? (known-procedure/pure/folding 2)]
** TODO [exn:break? (known-procedure/pure/folding 2)]
** TODO [exn:fail (known-constant)] ; not a primitive provcedure due to guard
** TODO [exn:fail:contract (known-constant)]
** TODO [exn:fail:contract:arity (known-constant)]
** TODO [exn:fail:contract:arity? (known-procedure/pure/folding 2)]
** TODO [exn:fail:contract:continuation (known-constant)]
** TODO [exn:fail:contract:continuation? (known-procedure/pure/folding 2)]
** TODO [exn:fail:contract:divide-by-zero (known-constant)]
** TODO [exn:fail:contract:divide-by-zero? (known-procedure/pure/folding 2)]
** TODO [exn:fail:contract:non-fixnum-result (known-constant)]
** TODO [exn:fail:contract:non-fixnum-result? (known-procedure/pure/folding 2)]
** TODO [exn:fail:contract:variable (known-constant)]
** TODO [exn:fail:contract:variable-id (known-procedure 2)]
** TODO [exn:fail:contract:variable? (known-procedure/pure/folding 2)]
** TODO [exn:fail:contract? (known-procedure/pure/folding 2)]
** TODO [exn:fail:filesystem (known-constant)]
** TODO [exn:fail:filesystem:errno (known-constant)]
** TODO [exn:fail:filesystem:errno-errno (known-procedure 2)]
** TODO [exn:fail:filesystem:errno? (known-procedure/pure/folding 2)]
** TODO [exn:fail:filesystem:exists (known-constant)]
** TODO [exn:fail:filesystem:exists? (known-procedure 2)]
** TODO [exn:fail:filesystem:version (known-constant)]
** TODO [exn:fail:filesystem:version? (known-procedure/pure/folding 2)]
** TODO [exn:fail:filesystem? (known-procedure 2)]
** TODO [exn:fail:network (known-constant)]
** TODO [exn:fail:network:errno (known-constant)]
** TODO [exn:fail:network:errno-errno (known-procedure 2)]
** TODO [exn:fail:network:errno? (known-procedure/pure/folding 2)]
** TODO [exn:fail:network? (known-procedure 2)]
** TODO [exn:fail:out-of-memory (known-constant)]
** TODO [exn:fail:out-of-memory? (known-procedure/pure/folding 2)]
** TODO [exn:fail:read (known-constant)]
** TODO [exn:fail:read-srclocs (known-procedure 2)]
** TODO [exn:fail:read:eof (known-constant)]
** TODO [exn:fail:read:eof? (known-procedure/pure/folding 2)]
** TODO [exn:fail:read:non-char (known-constant)]
** TODO [exn:fail:read:non-char? (known-procedure/pure/folding 2)]
** TODO [exn:fail:read? (known-procedure 2)]
** TODO [exn:fail:unsupported (known-constant)]
** TODO [exn:fail:unsupported? (known-procedure/pure/folding 2)]
** TODO [exn:fail:user (known-constant)]
** TODO [exn:fail:user? (known-procedure/pure/folding 2)]
** TODO [exn:fail? (known-procedure/pure/folding 2)]
** TODO [exn:srclocs-accessor (known-procedure 2)]
** TODO [exn:srclocs? (known-procedure/pure/folding 2)]
** DONE [exn? (known-procedure/pure/folding 2)]
** TODO [exp (known-procedure/folding 2)]
** TODO [expand-user-path (known-procedure/no-prompt 2)]
** TODO [explode-path (known-procedure/no-prompt 2)]
** TODO [expt (known-procedure/folding/limited 4 'expt)]
** TODO [file-exists? (known-procedure/no-prompt 2)]
** TODO [file-or-directory-identity (known-procedure/no-prompt 6)]
** TODO [file-or-directory-modify-seconds (known-procedure/no-prompt 14)]
** TODO [file-or-directory-permissions (known-procedure/no-prompt 6)]
** TODO [file-position (known-procedure/no-prompt 6)]
** TODO [file-position* (known-procedure/no-prompt 2)]
** TODO [file-size (known-procedure/no-prompt 2)]
** TODO [file-stream-buffer-mode (known-procedure 6)]
** TODO [file-stream-port? (known-procedure/no-prompt 2)]
** TODO [file-truncate (known-procedure/no-prompt 4)]
** TODO [filesystem-change-evt (known-procedure/no-prompt 6)]
** TODO [filesystem-change-evt-cancel (known-procedure/no-prompt 2)]
** TODO [filesystem-change-evt? (known-procedure/pure/folding 2)]
** TODO [filesystem-root-list (known-procedure/no-prompt 1)]
** TODO [find-system-path (known-procedure/no-prompt 2)]
** TODO [fixnum? (known-procedure/pure 2)]
** TODO [floating-point-bytes->real (known-procedure/no-prompt 30)]
** TODO [flonum? (known-procedure/pure/folding 2)]
** TODO [floor (known-procedure/folding 2)]
** TODO [flush-output (known-procedure 3)]
** TODO [for-each (known-procedure -4)]
** TODO [format (known-procedure -2)]
** TODO [fprintf (known-procedure -4)]
** TODO [gcd (known-procedure/folding -1)]
** TODO [gensym (known-procedure 3)]
** TODO [get-output-bytes (known-procedure/no-prompt 30)]
** TODO [get-output-string (known-procedure/no-prompt 2)]
** TODO [global-port-print-handler (known-procedure 3)]
** TODO [handle-evt (known-procedure/no-prompt 4)]
** TODO [handle-evt? (known-procedure/pure/folding 2)]
** TODO [hash (known-procedure -1)]
** TODO [hash-clear (known-procedure 2)]
** TODO [hash-clear! (known-procedure 2)]
** TODO [hash-copy (known-procedure 2)]
** TODO [hash-count (known-procedure 2)]
** TODO [hash-eq? (known-procedure 2)]
** TODO [hash-equal? (known-procedure 2)]
** TODO [hash-eqv? (known-procedure 2)]
** TODO [hash-for-each (known-procedure 12)]
** TODO [hash-iterate-first (known-procedure 2)]
** TODO [hash-iterate-key (known-procedure 4)]
** TODO [hash-iterate-key+value (known-procedure 4)]
** TODO [hash-iterate-next (known-procedure 4)]
** TODO [hash-iterate-pair (known-procedure 4)]
** TODO [hash-iterate-value (known-procedure 4)]
** TODO [hash-keys-subset? (known-procedure 4)]
** TODO [hash-map (known-procedure 12)]
** TODO [hash-placeholder? (known-procedure/pure/folding 2)]
** TODO [hash-ref (known-procedure 12)]
** TODO [hash-ref-key (known-procedure 12)]
** TODO [hash-remove (known-procedure 4)]
** TODO [hash-remove! (known-procedure 4)]
** TODO [hash-set (known-procedure 8)]
** TODO [hash-set! (known-procedure 8)]
** TODO [hash-weak? (known-procedure 2)]
** DONE [hash? (known-procedure/pure/folding 2)]
** TODO [hasheq (known-procedure -1)]
** TODO [hasheqv (known-procedure -1)]
** TODO [imag-part (known-procedure/folding 2)]
** DONE [immutable? (known-procedure/pure/folding 2)]
** TODO [impersonate-box (known-procedure -8)]
** TODO [impersonate-channel (known-procedure -8)]
** TODO [impersonate-continuation-mark-key (known-procedure -8)]
** TODO [impersonate-hash (known-procedure -32)]
** TODO [impersonate-procedure (known-procedure/no-prompt -4)]
** TODO [impersonate-procedure* (known-procedure/no-prompt -4)]
** TODO [impersonate-prompt-tag (known-procedure -8)]
** TODO [impersonate-struct (known-procedure -2)]
** TODO [impersonate-vector (known-procedure -8)]
** TODO [impersonate-vector* (known-procedure -8)]
** TODO [impersonator-ephemeron (known-procedure 2)]
** TODO [impersonator-of? (known-procedure 4)]
** TODO [impersonator-prop:application-mark (known-constant)]
** TODO [impersonator-property-accessor-procedure? (known-procedure 2)]
** TODO [impersonator-property? (known-procedure/pure/folding 2)]
** TODO [impersonator? (known-procedure/pure/folding 2)]
** TODO [inexact->exact (known-procedure/folding 2)]
** TODO [inexact-real? (known-procedure/pure/folding 2)]
** TODO [inexact? (known-procedure/folding 2)]
** TODO [input-port? (known-procedure/pure/folding 2)]
** TODO [inspector-superior? (known-procedure/no-prompt 4)]
** TODO [inspector? (known-procedure/pure/folding 2)]
** TODO [integer->char (known-procedure/folding 2)]
** TODO [integer->integer-bytes (known-procedure/no-prompt 120)]
** TODO [integer-bytes->integer (known-procedure/no-prompt 60)]
** DONE [integer-length (known-procedure/folding 2)]
** TODO [integer-sqrt (known-procedure/folding 2)]
** TODO [integer-sqrt/remainder (known-procedure/no-prompt 2)]
** DONE [integer? (known-procedure/pure/folding 2)]
** DONE [interned-char? (known-procedure/pure 2)]
** DONE [keyword->string (known-procedure/no-prompt 2)]
** TODO [keyword<? (known-procedure/folding -2)]
** DONE [keyword? (known-procedure/pure/folding 2)]
** TODO [kill-thread (known-procedure/no-prompt 2)]
** TODO [lcm (known-procedure/folding -1)]
** TODO [length (known-procedure/no-prompt 2)]
** TODO [link-exists? (known-procedure/no-prompt 2)]
** TODO [list (known-procedure/pure -1)]
** TODO [list* (known-procedure/pure -2)]
** TODO [list->bytes (known-procedure/no-prompt 2)]
** TODO [list->string (known-procedure/no-prompt 2)]
** TODO [list->vector (known-procedure/no-prompt 2)]
** DONE [list-pair? (known-procedure/pure/folding 2)]
** TODO [list-ref (known-procedure/no-prompt 4)]
** TODO [list-tail (known-procedure/no-prompt 4)]
** DONE [list? (known-procedure/pure/folding 2)]
** TODO [load-on-demand-enabled (known-procedure 3)]
** TODO [locale-string-encoding (known-procedure/no-prompt 1)]
** TODO [log (known-procedure/folding 6)]
** TODO [log-all-levels (known-procedure/no-prompt 2)]
** TODO [log-level-evt (known-procedure/no-prompt 2)]
** TODO [log-level? (known-procedure/no-prompt 12)]
** TODO [log-max-level (known-procedure/no-prompt 6)]
** TODO [log-message (known-procedure/no-prompt 112)]
** TODO [log-receiver? (known-procedure/pure/folding 2)]
** TODO [logger-name (known-procedure/no-prompt 2)]
** TODO [logger? (known-procedure/pure/folding 2)]
** TODO [magnitude (known-procedure/folding 2)]
** TODO [make-bytes (known-procedure/no-prompt 6)]
** TODO [make-channel (known-procedure/pure 1)]
** TODO [make-continuation-mark-key (known-procedure/no-prompt 3)]
** TODO [make-continuation-prompt-tag (known-procedure/no-prompt 3)]
** TODO [make-custodian (known-procedure/no-prompt 3)]
** TODO [make-custodian-box (known-procedure/no-prompt 4)]
** TODO [make-derived-parameter (known-procedure 8)]
** TODO [make-directory (known-procedure/no-prompt 2)]
** TODO [make-environment-variables (known-procedure/no-prompt -1)]
** TODO [make-ephemeron (known-procedure/pure 4)]
** TODO [make-file-or-directory-link (known-procedure/no-prompt 4)]
** TODO [make-hash (known-procedure 3)]
** TODO [make-hash-placeholder (known-procedure/no-prompt 2)]
** TODO [make-hasheq (known-procedure/no-prompt 3)]
** TODO [make-hasheq-placeholder (known-procedure/no-prompt 2)]
** TODO [make-hasheqv (known-procedure/no-prompt 3)]
** TODO [make-hasheqv-placeholder (known-procedure/no-prompt 2)]
** TODO [make-immutable-hash (known-procedure 3)]
** TODO [make-immutable-hasheq (known-procedure/no-prompt 3)]
** TODO [make-immutable-hasheqv (known-procedure/no-prompt 3)]
** TODO [make-impersonator-property (known-procedure/no-prompt 2)]
** TODO [make-input-port (known-procedure 2032)]
** TODO [make-inspector (known-procedure/no-prompt 3)]
** TODO [make-known-char-range-list (known-procedure/pure 1)]
** TODO [make-log-receiver (known-procedure/no-prompt -4)]
** TODO [make-logger (known-procedure/no-prompt -1)]
** TODO [make-output-port (known-procedure 4080)]
** TODO [make-parameter (known-procedure 14)]
** TODO [make-phantom-bytes (known-procedure/no-prompt 2)]
** TODO [make-pipe (known-procedure/no-prompt 15)]
** TODO [make-placeholder (known-procedure/pure 2)]
** TODO [make-plumber (known-procedure/pure 1)]
** TODO [make-polar (known-procedure/folding 4)]
** TODO [make-prefab-struct (known-procedure -2)]
** TODO [make-pseudo-random-generator (known-procedure/no-prompt 1)] ; not pure, depends on (current-milliseconds)
** TODO [make-reader-graph (known-procedure 2)]
** TODO [make-rectangular (known-procedure/folding 4)]
** TODO [make-security-guard (known-procedure 24)]
** TODO [make-semaphore (known-procedure/no-prompt 3)]
** TODO [make-shared-bytes (known-procedure/no-prompt 6)]
** TODO [make-sibling-inspector (known-procedure/no-prompt 3)]
** TODO [make-string (known-procedure/no-prompt 6)]
** TODO [make-struct-field-accessor (known-procedure 12)]
** TODO [make-struct-field-mutator (known-procedure 12)]
** TODO [make-struct-type (known-procedure 4080)]
** TODO [make-struct-type-property (known-procedure 30)]
** TODO [make-thread-cell (known-procedure/pure 6)]
** TODO [make-thread-group (known-procedure/no-prompt 3)]
** TODO [make-vector (known-procedure/no-prompt 6)]
** TODO [make-weak-box (known-procedure/pure 2)]
** TODO [make-weak-hash (known-procedure 3)]
** TODO [make-weak-hasheq (known-procedure/no-prompt 3)]
** TODO [make-weak-hasheqv (known-procedure/no-prompt 3)]
** TODO [make-will-executor (known-procedure/pure 1)]
** TODO [map (known-procedure -4)]
** TODO [max (known-procedure/folding -2)]
** TODO [mcar (known-procedure/no-prompt 2)]
** TODO [mcdr (known-procedure/no-prompt 2)]
** TODO [mcons (known-procedure/pure 4)]
** TODO [min (known-procedure/folding -2)]
** TODO [modulo (known-procedure/folding 4)]
** DONE [mpair? (known-procedure/pure/folding 2)]
** TODO [nack-guard-evt (known-procedure/no-prompt 2)]
** TODO [negative? (known-procedure/folding 2)]
** TODO [never-evt (known-authentic)]
** TODO [newline (known-procedure 3)]
** DONE [not (known-procedure/pure/folding 2)]
** DONE [null (known-literal '())]
** DONE [null? (known-procedure/pure/folding 2)]
** TODO [number->string (known-procedure/no-prompt 6)]
** DONE [number? (known-procedure/pure/folding 2)]
** TODO [numerator (known-procedure/folding 2)]
** TODO [object-name (known-procedure 2)]
** TODO [odd? (known-procedure/folding 2)]
** TODO [open-input-bytes (known-procedure/no-prompt 6)]
** TODO [open-input-file (known-procedure/no-prompt 14)]
** TODO [open-input-output-file (known-procedure/no-prompt 14)]
** TODO [open-input-string (known-procedure/no-prompt 6)]
** TODO [open-output-bytes (known-procedure/no-prompt 3)]
** TODO [open-output-file (known-procedure/no-prompt 14)]
** TODO [open-output-string (known-procedure/no-prompt 3)]
** TODO [ormap (known-procedure -4)]
** TODO [output-port? (known-procedure/pure/folding 2)]
** DONE [pair? (known-procedure/pure/folding 2)]
** TODO [parameter-procedure=? (known-procedure 4)]
** DONE [parameter? (known-procedure/pure/folding 2)]
** DONE [parameterization? (known-procedure/pure/folding 2)]
** TODO [path->bytes (known-procedure/no-prompt 2)]
** TODO [path->complete-path (known-procedure/no-prompt 6)]
** TODO [path->directory-path (known-procedure/no-prompt 2)]
** TODO [path->string (known-procedure/no-prompt 2)]
** TODO [path-convention-type (known-procedure/no-prompt 2)]
** TODO [path-element->bytes (known-procedure/no-prompt 2)]
** TODO [path-element->string (known-procedure/no-prompt 2)]
** TODO [path-for-some-system? (known-procedure/pure/folding 2)]
** TODO [path<? (known-procedure/no-prompt -2)]
** DONE [path? (known-procedure/pure 2)]
** TODO [peek-byte (known-procedure 7)]
** TODO [peek-byte-or-special (known-procedure 63)]
** TODO [peek-bytes (known-procedure 12)]
** TODO [peek-bytes! (known-procedure 60)]
** TODO [peek-bytes-avail! (known-procedure 124)]
** TODO [peek-bytes-avail!* (known-procedure 124)]
** TODO [peek-bytes-avail!/enable-break (known-procedure 124)]
** TODO [peek-char (known-procedure 7)]
** TODO [peek-char-or-special (known-procedure 31)]
** TODO [peek-string (known-procedure 12)]
** TODO [peek-string! (known-procedure 60)]
** TODO [phantom-bytes? (known-procedure/pure/folding 2)]
** TODO [pipe-content-length (known-procedure/no-prompt 2)]
** TODO [placeholder-get (known-procedure/no-prompt 2)]
** TODO [placeholder-set! (known-procedure/no-prompt 4)]
** TODO [placeholder? (known-procedure/pure/folding 2)]
** TODO [plumber-add-flush! (known-procedure 12)]
** TODO [plumber-flush-all (known-procedure 2)]
** TODO [plumber-flush-handle-remove! (known-procedure/no-prompt 2)]
** TODO [plumber-flush-handle? (known-procedure/pure/folding 2)]
** TODO [plumber? (known-procedure/pure/folding 2)]
** TODO [poll-guard-evt (known-procedure 2)]
** TODO [port-closed-evt (known-procedure 3)]
** TODO [port-closed? (known-procedure 2)]
** TODO [port-commit-peeked (known-procedure 24)]
** TODO [port-count-lines! (known-procedure 2)]
** TODO [port-count-lines-enabled (known-procedure 3)]
** TODO [port-counts-lines? (known-procedure 2)]
** TODO [port-display-handler (known-procedure 6)]
** TODO [port-file-identity (known-procedure 2)]
** TODO [port-file-unlock (known-procedure 2)]
** TODO [port-next-location (known-procedure 2)]
** TODO [port-print-handler (known-procedure 6)]
** TODO [port-progress-evt (known-procedure 3)]
** TODO [port-provides-progress-evts? (known-procedure 2)]
** TODO [port-read-handler (known-procedure 6)]
** TODO [port-try-file-lock? (known-procedure 4)]
** TODO [port-waiting-peer? (known-procedure 2)]
** TODO [port-write-handler (known-procedure 6)]
** TODO [port-writes-atomic? (known-procedure 2)]
** TODO [port-writes-special? (known-procedure 2)]
** TODO [positive? (known-procedure/folding 2)]
** TODO [prefab-key->struct-type (known-procedure/no-prompt 4)]
** TODO [prefab-key? (known-procedure/no-prompt 2)] ; not pure, the argument may have a mutable vector
** TODO [prefab-struct-key (known-procedure/no-prompt 2)]
** TODO [pregexp (known-procedure/no-prompt 6)]
** DONE [pregexp? (known-procedure/pure/folding 2)]
** TODO [primitive-closure? (known-procedure/pure/folding 2)]
** TODO [primitive-result-arity (known-procedure 2)]
** TODO [primitive? (known-procedure/pure 2)]
** TODO [print (known-procedure 14)]
** TODO [print-as-expression (known-procedure 3)]
** TODO [print-boolean-long-form (known-procedure 3)]
** TODO [print-box (known-procedure 3)]
** TODO [print-graph (known-procedure 3)]
** TODO [print-hash-table (known-procedure 3)]
** TODO [print-mpair-curly-braces (known-procedure 3)]
** TODO [print-pair-curly-braces (known-procedure 3)]
** TODO [print-reader-abbreviations (known-procedure 3)]
** TODO [print-struct (known-procedure 3)]
** TODO [print-syntax-width (known-procedure 3)]
** TODO [print-unreadable (known-procedure 3)]
** TODO [print-vector-length (known-procedure 3)]
** TODO [printf (known-procedure -2)]
** TODO [procedure->method (known-procedure/no-prompt 2)]
** TODO [procedure-arity (known-procedure 2)]
** TODO [procedure-arity-mask (known-procedure 2)]
** TODO [procedure-arity-includes? (known-procedure 12)]
** TODO [procedure-arity? (known-procedure/pure/folding 2)]
** TODO [procedure-closure-contents-eq? (known-procedure 4)]
** TODO [procedure-extract-target (known-procedure 2)]
** TODO [procedure-impersonator*? (known-procedure/pure/folding 2)]
** TODO [procedure-reduce-arity (known-procedure 12)]
** TODO [procedure-reduce-arity-mask (known-procedure 12)]
** TODO [procedure-rename (known-procedure 4)]
** TODO [procedure-result-arity (known-procedure 2)]
** TODO [procedure-specialize (known-procedure 2)]
** TODO [procedure-struct-type? (known-procedure 2)]
** DONE [procedure? (known-procedure/pure/folding 2)]
** TODO [progress-evt? (known-procedure 6)]
** TODO [prop:arity-string (known-constant)]
** TODO [prop:authentic (known-struct-type-property/immediate-guard)]
** TODO [prop:checked-procedure (known-constant)]
** TODO [prop:custom-print-quotable (known-constant)]
** TODO [prop:custom-write (known-struct-type-property/immediate-guard)]
** TODO [prop:equal+hash (known-struct-type-property/immediate-guard)]
** TODO [prop:evt (known-struct-type-property/immediate-guard)]
** TODO [prop:exn:srclocs (known-constant)]
** TODO [prop:impersonator-of (known-constant)]
** TODO [prop:incomplete-arity (known-constant)]
** TODO [prop:input-port (known-constant)]
** TODO [prop:method-arity-error (known-constant)]
** TODO [prop:object-name (known-constant)]
** TODO [prop:output-port (known-constant)]
** TODO [prop:procedure (known-struct-type-property/immediate-guard)]
** TODO [pseudo-random-generator->vector (known-procedure/no-prompt 2)]
** TODO [pseudo-random-generator-vector? (known-procedure/no-prompt 2)]
** TODO [pseudo-random-generator? (known-procedure/pure/folding 2)]
** TODO [quotient (known-procedure/folding 4)]
** TODO [quotient/remainder (known-procedure/no-prompt 4)]
** TODO [raise (known-procedure 6)]
** TODO [raise-argument-error (known-procedure -8)]
** TODO [raise-arguments-error (known-procedure -4)]
** TODO [raise-arity-error (known-procedure -4)]
** TODO [raise-arity-mask-error (known-procedure -4)]
** TODO [raise-mismatch-error (known-procedure -8)]
** TODO [raise-range-error (known-procedure 384)]
** TODO [raise-result-error (known-procedure -8)]
** TODO [raise-result-arity-error (known-procedure -16)]
** TODO [raise-type-error (known-procedure -8)]
** TODO [raise-user-error (known-procedure -2)]
** TODO [random (known-procedure/no-prompt 7)]
** TODO [random-seed (known-procedure/no-prompt 2)]
** DONE [rational? (known-procedure/pure/folding 2)]
** TODO [read-accept-bar-quote (known-procedure 3)]
** TODO [read-byte (known-procedure 3)]
** TODO [read-byte-or-special (known-procedure 15)]
** TODO [read-bytes (known-procedure 6)]
** TODO [read-bytes! (known-procedure 30)]
** TODO [read-bytes-avail! (known-procedure 30)]
** TODO [read-bytes-avail!* (known-procedure 30)]
** TODO [read-bytes-avail!/enable-break (known-procedure 30)]
** TODO [read-bytes-line (known-procedure 7)]
** TODO [read-case-sensitive (known-procedure 3)]
** TODO [read-char (known-procedure 3)]
** TODO [read-char-or-special (known-procedure 15)]
** TODO [read-line (known-procedure 7)]
** TODO [read-on-demand-source (known-procedure 3)]
** TODO [read-string (known-procedure 6)]
** TODO [read-string! (known-procedure 30)]
** TODO [real->double-flonum (known-procedure/folding 2)]
** TODO [real->floating-point-bytes (known-procedure 60)]
** TODO [real->single-flonum (known-procedure 2)]
** TODO [real-part (known-procedure/folding 2)]
** DONE [real? (known-procedure/pure/folding 2)]
** TODO [regexp (known-procedure/no-prompt 6)]
** TODO [regexp-match (known-procedure 124)]
** TODO [regexp-match-peek (known-procedure 124)]
** TODO [regexp-match-peek-immediate (known-procedure 124)]
** TODO [regexp-match-peek-positions (known-procedure 124)]
** TODO [regexp-match-peek-positions-immediate (known-procedure 124)]
** TODO [regexp-match-peek-positions-immediate/end (known-procedure 252)]
** TODO [regexp-match-peek-positions/end (known-procedure 252)]
** TODO [regexp-match-positions (known-procedure 124)]
** TODO [regexp-match-positions/end (known-procedure 252)]
** TODO [regexp-match/end (known-procedure 252)]
** TODO [regexp-match? (known-procedure 124)]
** TODO [regexp-max-lookbehind (known-procedure 2)]
** TODO [regexp-replace (known-procedure 24)]
** TODO [regexp-replace* (known-procedure 24)]
** TODO [regexp? (known-procedure/pure/folding 2)]
** TODO [relative-path? (known-procedure/no-prompt 2)]
** TODO [remainder (known-procedure/folding 4)]
** TODO [rename-file-or-directory (known-procedure/no-prompt 12)]
** TODO [replace-evt (known-procedure 4)]
** TODO [resolve-path (known-procedure/no-prompt 2)]
** TODO [reverse (known-procedure/no-prompt 2)]
** TODO [round (known-procedure/folding 2)]
** TODO [seconds->date (known-procedure/no-prompt 6)]
** TODO [security-guard? (known-procedure/pure/folding 2)]
** TODO [semaphore-peek-evt (known-procedure/no-prompt 2)]
** TODO [semaphore-peek-evt? (known-procedure/pure/folding 2)]
** TODO [semaphore-post (known-procedure/no-prompt 2)]
** TODO [semaphore-try-wait? (known-procedure/no-prompt 2)]
** TODO [semaphore-wait (known-procedure/no-prompt 2)]
** TODO [semaphore-wait/enable-break (known-procedure/no-prompt 2)]
** TODO [semaphore? (known-procedure/pure/folding 2)]
** DONE [set-box! (known-procedure 4)]
** TODO [set-box*! (known-procedure/has-unsafe 4 'unsafe-set-box*!)]
** TODO [set-mcar! (known-procedure/no-prompt 4)]
** TODO [set-mcdr! (known-procedure/no-prompt 4)]
** TODO [set-phantom-bytes! (known-procedure/no-prompt 4)]
** TODO [set-port-next-location! (known-procedure 16)]
** TODO [sha1-bytes (known-procedure 14)]
** TODO [sha224-bytes (known-procedure 14)]
** TODO [sha256-bytes (known-procedure 14)]
** TODO [shared-bytes (known-procedure -1)]
** TODO [shell-execute (known-procedure 32)]
** TODO [simplify-path (known-procedure/no-prompt 6)]
** DONE [sin (known-procedure/folding 2)]
** TODO [single-flonum? (known-procedure/pure/folding 2)]
** TODO [single-flonum-available? (known-procedure/pure 1)]
** TODO [sleep (known-procedure/no-prompt 3)]
** TODO [split-path (known-procedure/no-prompt 2)]
** TODO [sqrt (known-procedure/folding 2)]
** TODO [srcloc (known-procedure/has-unsafe 32 'unsafe-make-srcloc)]
** TODO [srcloc->string (known-procedure 2)]
** TODO [srcloc-column (known-procedure 2)]
** TODO [srcloc-line (known-procedure 2)]
** TODO [srcloc-position (known-procedure 2)]
** TODO [srcloc-source (known-procedure 2)]
** TODO [srcloc-span (known-procedure 2)]
** TODO [srcloc? (known-procedure/pure/folding 2)]
** DONE [string (known-procedure/no-prompt -1)]
** TODO [string->bytes/latin-1 (known-procedure/no-prompt 30)]
** TODO [string->bytes/locale (known-procedure/no-prompt 30)]
** TODO [string->bytes/utf-8 (known-procedure/no-prompt 30)]
** DONE [string->immutable-string (known-procedure/no-prompt 2)]
** DONE [string->keyword (known-procedure/no-prompt 2)]
** DONE [string->list (known-procedure/no-prompt 2)]
** TODO [string->number (known-procedure/no-prompt 30)]
** TODO [string->path (known-procedure/no-prompt 2)]
** TODO [string->path-element (known-procedure/no-prompt 2)]
** DONE [string->symbol (known-procedure/no-prompt 2)]
** DONE [string->uninterned-symbol (known-procedure/no-prompt 2)]
** DONE [string->unreadable-symbol (known-procedure/no-prompt 2)]
** DONE [string-append (known-procedure/no-prompt -1)]
** DONE [string-ci<=? (known-procedure/no-prompt -2)]
** DONE [string-ci<? (known-procedure/no-prompt -2)]
** DONE [string-ci=? (known-procedure/no-prompt -2)]
** DONE [string-ci>=? (known-procedure/no-prompt -2)]
** DONE [string-ci>? (known-procedure/no-prompt -2)]
** DONE [string-copy (known-procedure/no-prompt 2)]
** TODO [string-copy! (known-procedure/no-prompt 56)]
** DONE [string-downcase (known-procedure/no-prompt 2)]
** TODO [string-fill! (known-procedure/no-prompt 4)]
** DONE [string-foldcase (known-procedure/no-prompt 2)]
** DONE [string-length (known-procedure/no-prompt 2)]
** TODO [string-locale-ci<? (known-procedure/no-prompt -2)]
** TODO [string-locale-ci=? (known-procedure/no-prompt -2)]
** TODO [string-locale-ci>? (known-procedure/no-prompt -2)]
** TODO [string-locale-downcase (known-procedure/no-prompt 2)]
** TODO [string-locale-upcase (known-procedure/no-prompt 2)]
** TODO [string-locale<? (known-procedure/no-prompt -2)]
** TODO [string-locale=? (known-procedure/no-prompt -2)]
** TODO [string-locale>? (known-procedure/no-prompt -2)]
** DONE [string-normalize-nfc (known-procedure/no-prompt 2)]
** DONE [string-normalize-nfd (known-procedure/no-prompt 2)]
** DONE [string-normalize-nfkc (known-procedure/no-prompt 2)]
** DONE [string-normalize-nfkd (known-procedure/no-prompt 2)]
** TODO [string-port? (known-procedure/no-prompt 2)]
** TODO [string-ref (known-procedure/no-prompt 4)]
** TODO [string-set! (known-procedure/no-prompt 8)]
** DONE [string-titlecase (known-procedure/no-prompt 2)]
** DONE [string-upcase (known-procedure/no-prompt 2)]
** SEMI [string-utf-8-length (known-procedure/no-prompt 14)]
*** TODO - I did this as a single-arg function, but really it takes 1-3 args and would need a safe wrapper
** DONE [string<=? (known-procedure/no-prompt -2)]
** DONE [string<? (known-procedure/no-prompt -2)]
** DONE [string=? (known-procedure/no-prompt -2)]
** DONE [string>=? (known-procedure/no-prompt -2)]
** DONE [string>? (known-procedure/no-prompt -2)]
** DONE [string? (known-procedure/pure/folding 2)]
** TODO [struct->vector (known-procedure 6)]
** TODO [struct-accessor-procedure? (known-procedure/pure/folding 2)]
** TODO [struct-constructor-procedure? (known-procedure/pure/folding 2)]
** TODO [struct-info (known-procedure 2)]
** TODO [struct-mutator-procedure? (known-procedure/pure/folding 2)]
** TODO [struct-predicate-procedure? (known-procedure/pure/folding 2)]
** TODO [struct-type-info (known-procedure 2)]
** TODO [struct-type-make-constructor (known-procedure 6)]
** TODO [struct-type-make-predicate (known-procedure 2)]
** TODO [struct-type-property-accessor-procedure? (known-procedure 2)]
** DONE [struct-type-property? (known-procedure/no-prompt 2)]
** DONE [struct-type? (known-procedure/no-prompt 2)]
** TODO [struct:arity-at-least (known-constant)]
** TODO [struct:date (known-constant)]
** TODO [struct:date* (known-constant)]
** TODO [struct:exn (known-constant)]
** TODO [struct:exn:break (known-constant)]
** TODO [struct:exn:break:hang-up (known-constant)]
** TODO [struct:exn:break:terminate (known-constant)]
** TODO [struct:exn:fail (known-constant)]
** TODO [struct:exn:fail:contract (known-constant)]
** TODO [struct:exn:fail:contract:arity (known-constant)]
** TODO [struct:exn:fail:contract:continuation (known-constant)]
** TODO [struct:exn:fail:contract:divide-by-zero (known-constant)]
** TODO [struct:exn:fail:contract:non-fixnum-result (known-constant)]
** TODO [struct:exn:fail:contract:variable (known-constant)]
** TODO [struct:exn:fail:filesystem (known-constant)]
** TODO [struct:exn:fail:filesystem:errno (known-constant)]
** TODO [struct:exn:fail:filesystem:exists (known-constant)]
** TODO [struct:exn:fail:filesystem:version (known-constant)]
** TODO [struct:exn:fail:network (known-constant)]
** TODO [struct:exn:fail:network:errno (known-constant)]
** TODO [struct:exn:fail:out-of-memory (known-constant)]
** TODO [struct:exn:fail:read (known-constant)]
** TODO [struct:exn:fail:read:eof (known-constant)]
** TODO [struct:exn:fail:read:non-char (known-constant)]
** TODO [struct:exn:fail:unsupported (known-constant)]
** TODO [struct:exn:fail:user (known-constant)]
** TODO [struct:srcloc (known-constant)]
** DONE [struct? (known-procedure/no-prompt 2)] ; not pure, depends on (current-inspector)
** DONE [sub1 (known-procedure/folding 2)]
** TODO [subbytes (known-procedure/no-prompt 12)]
** TODO [subprocess (known-procedure -16)]
** TODO [subprocess-group-enabled (known-procedure 3)]
** TODO [subprocess-kill (known-procedure 4)]
** TODO [subprocess-pid (known-procedure 2)]
** TODO [subprocess-status (known-procedure 2)]
** TODO [subprocess-wait (known-procedure 2)]
** TODO [subprocess? (known-procedure 2)]
** TODO [substring (known-procedure/no-prompt 12)]
** DONE [symbol->string (known-procedure/no-prompt 2)]
** DONE [symbol-interned? (known-procedure/no-prompt 2)]
** DONE [symbol-unreadable? (known-procedure/no-prompt 2)]
** DONE [symbol<? (known-procedure/no-prompt -2)]
** DONE [symbol? (known-procedure/pure/folding 2)]
** TODO [sync (known-procedure -1)]
** TODO [sync/enable-break (known-procedure -1)]
** TODO [sync/timeout (known-procedure -2)]
** TODO [sync/timeout/enable-break (known-procedure -2)]
** TODO [syntax->datum (known-procedure/no-prompt 2)]
** TODO [syntax-column (known-procedure/no-prompt 2)]
** TODO [syntax-e (known-procedure/no-prompt 2)]
** TODO [syntax-line (known-procedure/no-prompt 2)]
** TODO [syntax-position (known-procedure/no-prompt 2)]
** TODO [syntax-property (known-procedure/no-prompt 28)]
** TODO [syntax-property-symbol-keys (known-procedure/no-prompt 2)]
** TODO [syntax-source (known-procedure/no-prompt 2)]
** TODO [syntax-span (known-procedure/no-prompt 2)]
** DONE [syntax? (known-procedure/pure/folding 2)]
** TODO [system-big-endian? (known-procedure/pure 1)]
** TODO [system-idle-evt (known-procedure/pure 1)]
** TODO [system-language+country (known-procedure/no-prompt 1)]
** TODO [system-library-subpath (known-procedure/no-prompt 3)]
** TODO [system-path-convention-type (known-procedure/pure 1)]
** TODO [system-type (known-procedure/no-prompt 3)]
** DONE [tan (known-procedure/folding 2)]
** TODO [terminal-port? (known-procedure/no-prompt 2)]
** TODO [thread (known-procedure 2)]
** TODO [thread-cell-ref (known-procedure/no-prompt 2)]
** TODO [thread-cell-set! (known-procedure/no-prompt 4)]
** TODO [thread-cell-values? (known-procedure/pure/folding 2)]
** TODO [thread-cell? (known-procedure/pure/folding 2)]
** TODO [thread-dead-evt (known-procedure/no-prompt 2)]
** TODO [thread-dead? (known-procedure/no-prompt 2)]
** TODO [thread-group? (known-procedure/pure/folding 2)]
** TODO [thread-receive (known-procedure/no-prompt 1)]
** TODO [thread-receive-evt (known-procedure/pure 1)]
** TODO [thread-resume (known-procedure/no-prompt 6)]
** TODO [thread-resume-evt (known-procedure/no-prompt 2)]
** TODO [thread-rewind-receive (known-procedure/no-prompt 2)]
** TODO [thread-running? (known-procedure/no-prompt 2)]
** TODO [thread-send (known-procedure/no-prompt 12)]
** TODO [thread-suspend (known-procedure/no-prompt 2)]
** TODO [thread-suspend-evt (known-procedure/no-prompt 2)]
** TODO [thread-try-receive (known-procedure/no-prompt 1)]
** TODO [thread-wait (known-procedure/no-prompt 2)]
** TODO [thread/suspend-to-kill (known-procedure 2)]
** TODO [thread? (known-procedure/pure/folding 2)]
** TODO [time-apply (known-procedure 4)]
** DONE [true-object? (known-procedure/pure/folding 2)]
** DONE [truncate (known-procedure/folding 2)]
** DONE [unbox (known-procedure 2)]
** TODO [unbox* (known-procedure/has-unsafe 2 'unsafe-unbox*)]
** TODO [uncaught-exception-handler (known-procedure 3)]
** TODO [unquoted-printing-string (known-procedure/no-prompt 2)]
** TODO [unquoted-printing-string-value (known-procedure 2)]
** TODO [unquoted-printing-string? (known-procedure/no-prompt 2)]
** TODO [values (known-procedure/no-prompt -1)] ; not marked as pure, because it is not single valued
** TODO [vector (known-procedure/pure -1)]
** TODO [vector->immutable-vector (known-procedure 2)]
** TODO [vector->list (known-procedure 2)]
** TODO [vector->pseudo-random-generator (known-procedure 2)]
** TODO [vector->pseudo-random-generator! (known-procedure 4)]
** TODO [vector->values (known-procedure 14)]
** TODO [vector-cas! (known-procedure/has-unsafe 16 'unsafe-vector*-cas!)]
** TODO [vector-copy! (known-procedure 56)]
** TODO [vector-fill! (known-procedure 4)]
** TODO [vector-immutable (known-procedure/pure -1)]
** TODO [vector-length (known-procedure/no-prompt 2)]
** TODO [vector-ref (known-procedure 4)]
** TODO [vector-set! (known-procedure 8)]
** TODO [vector-set-performance-stats! (known-procedure 6)]
** DONE [vector? (known-procedure/pure/folding 2)]
** TODO [vector*-length (known-procedure/has-unsafe 2 'unsafe-vector*-length)]
** TODO [vector*-ref (known-procedure/has-unsafe 4 'unsafe-vector*-ref)]
** TODO [vector*-set! (known-procedure/has-unsafe 8 'unsafe-vector*-set!)]
** DONT-DO [version (known-procedure/pure 1)]
** DONE [void (known-procedure/pure/folding -1)]
** DONE [void? (known-procedure/pure/folding 2)]
** TODO [weak-box-value (known-procedure/no-prompt 6)]
** TODO [weak-box? (known-procedure/pure/folding 2)]
** TODO [will-execute (known-procedure 2)]
** TODO [will-executor? (known-procedure/pure/folding 2)]
** TODO [will-register (known-procedure 8)]
** TODO [will-try-execute (known-procedure 2)]
** TODO [with-input-from-file (known-procedure 12)]
** TODO [with-output-to-file (known-procedure 28)]
** TODO [wrap-evt (known-procedure 4)]
** TODO [write (known-procedure 6)]
** TODO [write-byte (known-procedure 6)]
** TODO [write-bytes (known-procedure 30)]
** TODO [write-bytes-avail (known-procedure 30)]
** TODO [write-bytes-avail* (known-procedure 30)]
** TODO [write-bytes-avail-evt (known-procedure 30)]
** TODO [write-bytes-avail/enable-break (known-procedure 30)]
** TODO [write-char (known-procedure 6)]
** TODO [write-special (known-procedure 6)]
** TODO [write-special-avail* (known-procedure 6)]
** TODO [write-special-evt (known-procedure 4)]
** TODO [write-string (known-procedure 30)]
** DONE [zero? (known-procedure/folding 2)]
